<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsimFix" off="0" region="0" recursive="0"/>
<pragma file="/data/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi4ELb0EEC2EDq4_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<3, false>::ap_int_base<2, false>(ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<3, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::ap_int_base<2, false>(ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<4>::ap_uint<4, false>(ap_int_base<4, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/data/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi2ELb0EEC2EDq2_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<2, 2, false, (ap_q_mode)5, (ap_o_mode)0, 0>::ap_fixed_base<6, false>(ap_int_base<6, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<5>::ap_uint<5, false>(ap_int_base<5, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/data/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi5ELb0EEC2EDq5_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::ap_int_base<3, false>(ap_int_base<3, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="to_ap_int_base" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<2>::ap_uint<2, 2, (ap_q_mode)5, (ap_o_mode)0, 0>(ap_ufixed<2, 2, (ap_q_mode)5, (ap_o_mode)0, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::ap_int_base<2, 2, false, (ap_q_mode)5, (ap_o_mode)0, 0>(ap_fixed_base<2, 2, false, (ap_q_mode)5, (ap_o_mode)0, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<2, 2, false, (ap_q_mode)5, (ap_o_mode)0, 0>& ap_fixed_base<2, 2, false, (ap_q_mode)5, (ap_o_mode)0, 0>::operator=<6, 6, false, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<6, 6, false, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::ap_int_base<2, false>(ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::ap_int_base<4, false>(ap_int_base<4, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::ap_int_base<2, false>(ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<3>::ap_uint<3, false>(ap_int_base<3, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/data/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi3ELb0EEC2EDq3_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::ap_int_base<5, false>(ap_int_base<5, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<6, 6, false, (ap_q_mode)5, (ap_o_mode)3, 0>& ap_fixed_base<6, 6, false, (ap_q_mode)5, (ap_o_mode)3, 0>::operator=<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0>(ap_fixed_base<32, 32, true, (ap_q_mode)5, (ap_o_mode)3, 0> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<6>::ap_uint<6, false>(ap_int_base<6, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/data/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi6ELb0EEC2EDq6_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::RType<2, false>::plus operator+<5, false, 2, false>(ap_int_base<5, false> const&, ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_ufixed<2, 2, (ap_q_mode)5, (ap_o_mode)0, 0>::ap_ufixed<6, false>(ap_int_base<6, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::RType<2, false>::plus operator+<2, false, 2, false>(ap_int_base<2, false> const&, ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<3, false>::RType<2, false>::plus operator+<3, false, 2, false>(ap_int_base<3, false> const&, ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<4, false>::RType<2, false>::plus operator+<4, false, 2, false>(ap_int_base<4, false> const&, ap_int_base<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<6, false>::RType<6, false>::arg1 operator>><6, false>(ap_int_base<6, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<6, false>::operator==<6, false>(ap_int_base<6, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<6, 6, false, (ap_q_mode)5, (ap_o_mode)3, 0>::operator!() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_fixed_base<6, 6, false, (ap_q_mode)5, (ap_o_mode)3, 0>::ap_fixed_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="report" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="overflow_adjust" off="0" region="0" recursive="0"/>
<pragma file="dut.cpp" line="17" pragmaType="inline" parentfunction="add5_sat_ufixed" off="0" region="0" recursive="0"/>
</pragmas>
