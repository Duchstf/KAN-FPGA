-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity KAN_lut_0_3_3_ROM_1P_LUTRAM_1R is 
    generic(
             DataWidth     : integer := 6; 
             AddressWidth     : integer := 6; 
             AddressRange    : integer := 64
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of KAN_lut_0_3_3_ROM_1P_LUTRAM_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "111101", 1 => "111100", 2 => "111011", 3 => "111010", 
    4 => "111000", 5 => "110111", 6 => "110101", 7 => "110011", 
    8 => "110001", 9 => "110000", 10 => "101110", 11 => "101101", 
    12 => "101100", 13 => "101100", 14 => "101100", 15 => "101100", 
    16 => "101101", 17 => "101110", 18 => "101111", 19 => "110000", 
    20 => "110001", 21 => "110011", 22 => "110101", 23 => "110111", 
    24 => "111010", 25 => "111101", 26 => "000000", 27 => "000100", 
    28 => "000111", 29 => "001010", 30 => "001101", 31 => "001111", 
    32 => "010001", 33 => "010010", 34 => "010001", 35 => "010001", 
    36 => "001111", 37 => "001101", 38 => "001010", 39 => "001000", 
    40 => "000110", 41 => "000101", 42 => "000100", 43 => "000100", 
    44 => "000101", 45 => "000110", 46 => "001000", 47 => "001010", 
    48 => "001011", 49 => "001101", 50 => "001110", 51 => "010000", 
    52 => "010001", 53 => "010010", 54 => "010011", 55 => "010100", 
    56 => "010101", 57 => "010110", 58 => "010111", 59 => "011000", 
    60 => "011000", 61 => "011001", 62 => "011001", 63 => "011010");



attribute syn_rom_style : string;

attribute syn_rom_style of mem0 : signal is "select_rom"; 
attribute ROM_STYLE : string;

attribute ROM_STYLE of mem0 : signal is "distributed";

begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

