-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity KAN_lut_0_0_1_ROM_1P_LUTRAM_1R is 
    generic(
             DataWidth     : integer := 7; 
             AddressWidth     : integer := 6; 
             AddressRange    : integer := 64
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of KAN_lut_0_0_1_ROM_1P_LUTRAM_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "0001000", 1 => "0001010", 2 => "0001011", 3 => "0001011", 
    4 => "0001100", 5 => "0001100", 6 => "0001100", 7 => "0001011", 
    8 => "0001010", 9 => "0001000", 10 => "0000111", 11 => "0000110", 
    12 => "0000101", 13 => "0000100", 14 => "0000011", 15 => "0000011", 
    16 => "0000011", 17 => "0000100", 18 => "0000100", 19 => "0000101", 
    20 => "0000101", 21 => "0000110", 22 => "0000110", 23 => "0000110", 
    24 => "0000111", 25 => "0000111", 26 => "0000111", 27 => "0000111", 
    28 => "0000111", 29 => "0000111", 30 => "0000110", 31 => "0000101", 
    32 => "0000100", 33 => "0000011", 34 => "0000010", 35 => "0000000", 
    36 => "1111110", 37 => "1111100", 38 => "1111010", 39 => "1111000", 
    40 => "1110110", 41 => "1110100", 42 => "1110010", 43 => "1110000", 
    44 => "1101110", 45 => "1101100", 46 => "1101010", 47 => "1101001", 
    48 => "1100111", 49 => "1100101", 50 => "1100100", 51 => "1100010", 
    52 => "1100001", 53 => "1100000", 54 => "1100000", 55 => "1011111", 
    56 => "1011110", 57 => "1011110", 58 => "1011101", 59 => "1011101", 
    60 => "1011101", 61 => "1011100", 62 => "1011011", 63 => "1011011");



attribute syn_rom_style : string;

attribute syn_rom_style of mem0 : signal is "select_rom"; 
attribute ROM_STYLE : string;

attribute ROM_STYLE of mem0 : signal is "distributed";

begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

