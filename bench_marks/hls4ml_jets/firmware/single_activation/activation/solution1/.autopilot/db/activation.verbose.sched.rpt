

================================================================
== Vitis HLS Report for 'activation'
================================================================
* Date:           Thu Jul 18 08:05:37 2024

* Version:        2022.2 (Build 3670227 on Oct 13 2022)
* Project:        activation
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcvu13p-flga2577-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  2.00 ns|  1.840 ns|     0.54 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      104|      104|  0.208 us|  0.208 us|    1|    1|      yes|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 105


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 105
* Pipeline : 1
  Pipeline-0 : II = 1, D = 105, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 84 
84 --> 85 
85 --> 86 
86 --> 87 
87 --> 88 
88 --> 89 
89 --> 90 
90 --> 91 
91 --> 92 
92 --> 93 
93 --> 94 
94 --> 95 
95 --> 96 
96 --> 97 
97 --> 98 
98 --> 99 
99 --> 100 
100 --> 101 
101 --> 102 
102 --> 103 
103 --> 104 
104 --> 105 
105 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.37>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%input_r_read = read i32 @_ssdm_op_Read.ap_none.float, i32 %input_r" [activation.cpp:93]   --->   Operation 106 'read' 'input_r_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [3/3] (1.37ns)   --->   "%tmp_4 = fcmp_olt  i32 %input_r_read, i32 -6" [activation.cpp:78]   --->   Operation 107 'fcmp' 'tmp_4' <Predicate = true> <Delay = 1.37> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 2> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 1.37>
ST_2 : Operation 108 [2/3] (1.37ns)   --->   "%tmp_4 = fcmp_olt  i32 %input_r_read, i32 -6" [activation.cpp:78]   --->   Operation 108 'fcmp' 'tmp_4' <Predicate = true> <Delay = 1.37> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 2> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 1.37>
ST_3 : Operation 109 [1/3] (1.37ns)   --->   "%tmp_4 = fcmp_olt  i32 %input_r_read, i32 -6" [activation.cpp:78]   --->   Operation 109 'fcmp' 'tmp_4' <Predicate = true> <Delay = 1.37> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 2> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 0.98>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%bitcast_ln78 = bitcast i32 %input_r_read" [activation.cpp:78]   --->   Operation 110 'bitcast' 'bitcast_ln78' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln78, i32 23, i32 30" [activation.cpp:78]   --->   Operation 111 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%trunc_ln78 = trunc i32 %bitcast_ln78" [activation.cpp:78]   --->   Operation 112 'trunc' 'trunc_ln78' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 113 [1/1] (0.58ns)   --->   "%icmp_ln78 = icmp_ne  i8 %tmp_3, i8 255" [activation.cpp:78]   --->   Operation 113 'icmp' 'icmp_ln78' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 114 [1/1] (0.75ns)   --->   "%icmp_ln78_1 = icmp_eq  i23 %trunc_ln78, i23 0" [activation.cpp:78]   --->   Operation 114 'icmp' 'icmp_ln78_1' <Predicate = true> <Delay = 0.75> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node select_ln78)   --->   "%or_ln78 = or i1 %icmp_ln78_1, i1 %icmp_ln78" [activation.cpp:78]   --->   Operation 115 'or' 'or_ln78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node select_ln78)   --->   "%and_ln78 = and i1 %or_ln78, i1 %tmp_4" [activation.cpp:78]   --->   Operation 116 'and' 'and_ln78' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 117 [1/1] (0.22ns) (out node of the LUT)   --->   "%select_ln78 = select i1 %and_ln78, i32 -6, i32 %input_r_read" [activation.cpp:78]   --->   Operation 117 'select' 'select_ln78' <Predicate = true> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.22> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.37>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%bitcast_ln79 = bitcast i32 %select_ln78" [activation.cpp:79]   --->   Operation 118 'bitcast' 'bitcast_ln79' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln79, i32 23, i32 30" [activation.cpp:79]   --->   Operation 119 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%trunc_ln79 = trunc i32 %bitcast_ln79" [activation.cpp:79]   --->   Operation 120 'trunc' 'trunc_ln79' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.58ns)   --->   "%icmp_ln79 = icmp_ne  i8 %tmp_5, i8 255" [activation.cpp:79]   --->   Operation 121 'icmp' 'icmp_ln79' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 122 [1/1] (0.75ns)   --->   "%icmp_ln79_1 = icmp_eq  i23 %trunc_ln79, i23 0" [activation.cpp:79]   --->   Operation 122 'icmp' 'icmp_ln79_1' <Predicate = true> <Delay = 0.75> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.75> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [3/3] (1.37ns)   --->   "%tmp_6 = fcmp_ogt  i32 %select_ln78, i32 6" [activation.cpp:79]   --->   Operation 123 'fcmp' 'tmp_6' <Predicate = true> <Delay = 1.37> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 2> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [3/3] (1.28ns)   --->   "%tmp = fpext i32 %select_ln78" [activation.cpp:82]   --->   Operation 124 'fpext' 'tmp' <Predicate = true> <Delay = 1.28> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 2> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 6 <SV = 5> <Delay = 1.37>
ST_6 : Operation 125 [2/3] (1.37ns)   --->   "%tmp_6 = fcmp_ogt  i32 %select_ln78, i32 6" [activation.cpp:79]   --->   Operation 125 'fcmp' 'tmp_6' <Predicate = true> <Delay = 1.37> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 2> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 126 [2/3] (1.28ns)   --->   "%tmp = fpext i32 %select_ln78" [activation.cpp:82]   --->   Operation 126 'fpext' 'tmp' <Predicate = true> <Delay = 1.28> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 2> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.37>
ST_7 : Operation 127 [1/3] (1.37ns)   --->   "%tmp_6 = fcmp_ogt  i32 %select_ln78, i32 6" [activation.cpp:79]   --->   Operation 127 'fcmp' 'tmp_6' <Predicate = true> <Delay = 1.37> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 2> <II = 1> <Delay = 1.37> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 128 [1/3] (1.28ns)   --->   "%tmp = fpext i32 %select_ln78" [activation.cpp:82]   --->   Operation 128 'fpext' 'tmp' <Predicate = true> <Delay = 1.28> <CoreInst = "Float2Double">   --->   Core 64 'Float2Double' <Latency = 2> <II = 1> <Delay = 1.28> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>

State 8 <SV = 7> <Delay = 0.41>
ST_8 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node select_ln82)   --->   "%or_ln79 = or i1 %icmp_ln79_1, i1 %icmp_ln79" [activation.cpp:79]   --->   Operation 129 'or' 'or_ln79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node select_ln82)   --->   "%and_ln79 = and i1 %or_ln79, i1 %tmp_6" [activation.cpp:79]   --->   Operation 130 'and' 'and_ln79' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 131 [1/1] (0.41ns) (out node of the LUT)   --->   "%select_ln82 = select i1 %and_ln79, i64 6, i64 %tmp" [activation.cpp:82]   --->   Operation 131 'select' 'select_ln82' <Predicate = true> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 9 <SV = 8> <Delay = 1.53>
ST_9 : Operation 132 [14/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 132 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 1.53>
ST_10 : Operation 133 [13/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 133 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 1.53>
ST_11 : Operation 134 [12/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 134 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 1.53>
ST_12 : Operation 135 [11/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 135 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 1.53>
ST_13 : Operation 136 [10/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 136 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 1.53>
ST_14 : Operation 137 [9/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 137 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 1.53>
ST_15 : Operation 138 [8/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 138 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 1.53>
ST_16 : Operation 139 [7/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 139 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 1.53>
ST_17 : Operation 140 [6/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 140 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 1.53>
ST_18 : Operation 141 [5/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 141 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 1.53>
ST_19 : Operation 142 [4/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 142 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 1.53>
ST_20 : Operation 143 [3/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 143 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 1.53>
ST_21 : Operation 144 [2/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 144 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 1.53>
ST_22 : Operation 145 [1/14] (1.53ns)   --->   "%add_i_i = dadd i64 %select_ln82, i64 6" [activation.cpp:82]   --->   Operation 145 'dadd' 'add_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DAddSub_nodsp">   --->   Core 36 'DAddSub_nodsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dadd' 'dsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 1.53>
ST_23 : Operation 146 [14/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 146 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 1.53>
ST_24 : Operation 147 [13/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 147 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 1.53>
ST_25 : Operation 148 [12/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 148 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 1.53>
ST_26 : Operation 149 [11/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 149 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 1.53>
ST_27 : Operation 150 [10/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 150 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 1.53>
ST_28 : Operation 151 [9/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 151 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 1.53>
ST_29 : Operation 152 [8/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 152 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 1.53>
ST_30 : Operation 153 [7/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 153 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 1.53>
ST_31 : Operation 154 [6/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 154 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 1.53>
ST_32 : Operation 155 [5/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 155 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 1.53>
ST_33 : Operation 156 [4/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 156 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 1.53>
ST_34 : Operation 157 [3/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 157 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 1.53>
ST_35 : Operation 158 [2/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 158 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 1.53>
ST_36 : Operation 159 [1/14] (1.53ns)   --->   "%mul_i_i = dmul i64 %add_i_i, i64 255" [activation.cpp:82]   --->   Operation 159 'dmul' 'mul_i_i' <Predicate = true> <Delay = 1.53> <CoreInst = "DMul_meddsp">   --->   Core 47 'DMul_meddsp' <Latency = 13> <II = 1> <Delay = 1.53> <FuncUnit> <Opcode : 'dmul'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 1.84>
ST_37 : Operation 160 [59/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 160 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 1.84>
ST_38 : Operation 161 [58/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 161 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 1.84>
ST_39 : Operation 162 [57/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 162 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 1.84>
ST_40 : Operation 163 [56/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 163 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 1.84>
ST_41 : Operation 164 [55/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 164 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 1.84>
ST_42 : Operation 165 [54/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 165 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 1.84>
ST_43 : Operation 166 [53/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 166 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 1.84>
ST_44 : Operation 167 [52/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 167 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 1.84>
ST_45 : Operation 168 [51/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 168 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 1.84>
ST_46 : Operation 169 [50/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 169 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 47 <SV = 46> <Delay = 1.84>
ST_47 : Operation 170 [49/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 170 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 47> <Delay = 1.84>
ST_48 : Operation 171 [48/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 171 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 49 <SV = 48> <Delay = 1.84>
ST_49 : Operation 172 [47/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 172 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 50 <SV = 49> <Delay = 1.84>
ST_50 : Operation 173 [46/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 173 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 50> <Delay = 1.84>
ST_51 : Operation 174 [45/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 174 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 51> <Delay = 1.84>
ST_52 : Operation 175 [44/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 175 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 52> <Delay = 1.84>
ST_53 : Operation 176 [43/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 176 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 53> <Delay = 1.84>
ST_54 : Operation 177 [42/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 177 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 55 <SV = 54> <Delay = 1.84>
ST_55 : Operation 178 [41/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 178 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 55> <Delay = 1.84>
ST_56 : Operation 179 [40/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 179 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 57 <SV = 56> <Delay = 1.84>
ST_57 : Operation 180 [39/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 180 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 58 <SV = 57> <Delay = 1.84>
ST_58 : Operation 181 [38/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 181 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 59 <SV = 58> <Delay = 1.84>
ST_59 : Operation 182 [37/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 182 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 60 <SV = 59> <Delay = 1.84>
ST_60 : Operation 183 [36/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 183 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 61 <SV = 60> <Delay = 1.84>
ST_61 : Operation 184 [35/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 184 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 62 <SV = 61> <Delay = 1.84>
ST_62 : Operation 185 [34/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 185 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 63 <SV = 62> <Delay = 1.84>
ST_63 : Operation 186 [33/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 186 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 64 <SV = 63> <Delay = 1.84>
ST_64 : Operation 187 [32/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 187 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 65 <SV = 64> <Delay = 1.84>
ST_65 : Operation 188 [31/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 188 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 66 <SV = 65> <Delay = 1.84>
ST_66 : Operation 189 [30/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 189 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 67 <SV = 66> <Delay = 1.84>
ST_67 : Operation 190 [29/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 190 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 68 <SV = 67> <Delay = 1.84>
ST_68 : Operation 191 [28/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 191 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 69 <SV = 68> <Delay = 1.84>
ST_69 : Operation 192 [27/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 192 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 70 <SV = 69> <Delay = 1.84>
ST_70 : Operation 193 [26/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 193 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 71 <SV = 70> <Delay = 1.84>
ST_71 : Operation 194 [25/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 194 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 72 <SV = 71> <Delay = 1.84>
ST_72 : Operation 195 [24/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 195 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 73 <SV = 72> <Delay = 1.84>
ST_73 : Operation 196 [23/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 196 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 74 <SV = 73> <Delay = 1.84>
ST_74 : Operation 197 [22/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 197 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 75 <SV = 74> <Delay = 1.84>
ST_75 : Operation 198 [21/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 198 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 76 <SV = 75> <Delay = 1.84>
ST_76 : Operation 199 [20/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 199 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 77 <SV = 76> <Delay = 1.84>
ST_77 : Operation 200 [19/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 200 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 78 <SV = 77> <Delay = 1.84>
ST_78 : Operation 201 [18/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 201 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 79 <SV = 78> <Delay = 1.84>
ST_79 : Operation 202 [17/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 202 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 80 <SV = 79> <Delay = 1.84>
ST_80 : Operation 203 [16/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 203 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 81 <SV = 80> <Delay = 1.84>
ST_81 : Operation 204 [15/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 204 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 82 <SV = 81> <Delay = 1.84>
ST_82 : Operation 205 [14/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 205 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 83 <SV = 82> <Delay = 1.84>
ST_83 : Operation 206 [13/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 206 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 84 <SV = 83> <Delay = 1.84>
ST_84 : Operation 207 [12/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 207 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 85 <SV = 84> <Delay = 1.84>
ST_85 : Operation 208 [11/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 208 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 86 <SV = 85> <Delay = 1.84>
ST_86 : Operation 209 [10/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 209 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 87 <SV = 86> <Delay = 1.84>
ST_87 : Operation 210 [9/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 210 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 88 <SV = 87> <Delay = 1.84>
ST_88 : Operation 211 [8/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 211 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 89 <SV = 88> <Delay = 1.84>
ST_89 : Operation 212 [7/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 212 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 90 <SV = 89> <Delay = 1.84>
ST_90 : Operation 213 [6/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 213 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 91 <SV = 90> <Delay = 1.84>
ST_91 : Operation 214 [5/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 214 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 92 <SV = 91> <Delay = 1.84>
ST_92 : Operation 215 [4/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 215 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 93 <SV = 92> <Delay = 1.84>
ST_93 : Operation 216 [3/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 216 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 94 <SV = 93> <Delay = 1.84>
ST_94 : Operation 217 [2/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 217 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 95 <SV = 94> <Delay = 1.84>
ST_95 : Operation 218 [1/59] (1.84ns)   --->   "%div_i_i = ddiv i64 %mul_i_i, i64 12" [activation.cpp:82]   --->   Operation 218 'ddiv' 'div_i_i' <Predicate = true> <Delay = 1.84> <CoreInst = "DDiv">   --->   Core 39 'DDiv' <Latency = 58> <II = 1> <Delay = 1.84> <FuncUnit> <Opcode : 'ddiv' 'drem'> <InPorts = 2> <OutPorts = 1>

State 96 <SV = 95> <Delay = 1.27>
ST_96 : Operation 219 [4/4] (1.27ns)   --->   "%normalized_value = fptrunc i64 %div_i_i" [activation.cpp:82]   --->   Operation 219 'fptrunc' 'normalized_value' <Predicate = true> <Delay = 1.27> <CoreInst = "Double2Float">   --->   Core 67 'Double2Float' <Latency = 3> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 97 <SV = 96> <Delay = 1.27>
ST_97 : Operation 220 [3/4] (1.27ns)   --->   "%normalized_value = fptrunc i64 %div_i_i" [activation.cpp:82]   --->   Operation 220 'fptrunc' 'normalized_value' <Predicate = true> <Delay = 1.27> <CoreInst = "Double2Float">   --->   Core 67 'Double2Float' <Latency = 3> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 98 <SV = 97> <Delay = 1.27>
ST_98 : Operation 221 [2/4] (1.27ns)   --->   "%normalized_value = fptrunc i64 %div_i_i" [activation.cpp:82]   --->   Operation 221 'fptrunc' 'normalized_value' <Predicate = true> <Delay = 1.27> <CoreInst = "Double2Float">   --->   Core 67 'Double2Float' <Latency = 3> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 99 <SV = 98> <Delay = 1.27>
ST_99 : Operation 222 [1/4] (1.27ns)   --->   "%normalized_value = fptrunc i64 %div_i_i" [activation.cpp:82]   --->   Operation 222 'fptrunc' 'normalized_value' <Predicate = true> <Delay = 1.27> <CoreInst = "Double2Float">   --->   Core 67 'Double2Float' <Latency = 3> <II = 1> <Delay = 1.27> <FuncUnit> <Opcode : 'fptrunc'> <InPorts = 1> <OutPorts = 1>

State 100 <SV = 99> <Delay = 1.30>
ST_100 : Operation 223 [1/1] (0.00ns)   --->   "%reg = bitcast i32 %normalized_value"   --->   Operation 223 'bitcast' 'reg' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 224 [1/1] (0.00ns)   --->   "%trunc_ln232 = trunc i32 %reg"   --->   Operation 224 'trunc' 'trunc_ln232' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 225 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %reg, i32 31"   --->   Operation 225 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 226 [1/1] (0.00ns)   --->   "%exp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %reg, i32 23, i32 30"   --->   Operation 226 'partselect' 'exp' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 227 [1/1] (0.00ns)   --->   "%zext_ln237 = zext i8 %exp"   --->   Operation 227 'zext' 'zext_ln237' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 228 [1/1] (0.00ns)   --->   "%index_V = trunc i32 %reg"   --->   Operation 228 'trunc' 'index_V' <Predicate = true> <Delay = 0.00>
ST_100 : Operation 229 [1/1] (0.84ns)   --->   "%icmp_ln249 = icmp_eq  i31 %trunc_ln232, i31 0"   --->   Operation 229 'icmp' 'icmp_ln249' <Predicate = true> <Delay = 0.84> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.84> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_100 : Operation 230 [1/1] (0.71ns)   --->   "%sh_amt = sub i9 150, i9 %zext_ln237"   --->   Operation 230 'sub' 'sh_amt' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_100 : Operation 231 [1/1] (0.58ns)   --->   "%icmp_ln253 = icmp_eq  i8 %exp, i8 150"   --->   Operation 231 'icmp' 'icmp_ln253' <Predicate = true> <Delay = 0.58> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.58> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_100 : Operation 232 [1/1] (0.59ns)   --->   "%icmp_ln255 = icmp_sgt  i9 %sh_amt, i9 0"   --->   Operation 232 'icmp' 'icmp_ln255' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_100 : Operation 233 [1/1] (0.59ns)   --->   "%icmp_ln256 = icmp_slt  i9 %sh_amt, i9 25"   --->   Operation 233 'icmp' 'icmp_ln256' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 101 <SV = 100> <Delay = 1.33>
ST_101 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%trunc_ln241 = trunc i32 %reg"   --->   Operation 234 'trunc' 'trunc_ln241' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%zext_ln258_cast = bitconcatenate i24 @_ssdm_op_BitConcatenate.i24.i1.i23, i1 1, i23 %trunc_ln241"   --->   Operation 235 'bitconcatenate' 'zext_ln258_cast' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%sext_ln252 = sext i9 %sh_amt"   --->   Operation 236 'sext' 'sext_ln252' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 237 [1/1] (0.71ns)   --->   "%sh_amt_1 = sub i9 0, i9 %sh_amt"   --->   Operation 237 'sub' 'sh_amt_1' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 238 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i6 @_ssdm_op_PartSelect.i6.i9.i32.i32, i9 %sh_amt_1, i32 3, i32 8"   --->   Operation 238 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 239 [1/1] (0.61ns)   --->   "%icmp_ln274 = icmp_slt  i6 %tmp_2, i6 1"   --->   Operation 239 'icmp' 'icmp_ln274' <Predicate = true> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%zext_ln258 = zext i24 %zext_ln258_cast"   --->   Operation 240 'zext' 'zext_ln258' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%lshr_ln258 = lshr i32 %zext_ln258, i32 %sext_ln252"   --->   Operation 241 'lshr' 'lshr_ln258' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%index_V_1 = trunc i32 %lshr_ln258"   --->   Operation 242 'trunc' 'index_V_1' <Predicate = true> <Delay = 0.00>
ST_101 : Operation 243 [1/1] (0.12ns)   --->   "%or_ln253 = or i1 %icmp_ln249, i1 %icmp_ln253"   --->   Operation 243 'or' 'or_ln253' <Predicate = true> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%xor_ln253 = xor i1 %or_ln253, i1 1"   --->   Operation 244 'xor' 'xor_ln253' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%and_ln256 = and i1 %icmp_ln256, i1 %xor_ln253"   --->   Operation 245 'and' 'and_ln256' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node index_V_3)   --->   "%and_ln256_1 = and i1 %and_ln256, i1 %icmp_ln255"   --->   Operation 246 'and' 'and_ln256_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_101 : Operation 247 [1/1] (0.92ns) (out node of the LUT)   --->   "%index_V_3 = select i1 %and_ln256_1, i8 %index_V_1, i8 0"   --->   Operation 247 'select' 'index_V_3' <Predicate = true> <Delay = 0.92> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 102 <SV = 101> <Delay = 1.00>
ST_102 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node index_V_4)   --->   "%sext_ln252_1 = sext i9 %sh_amt_1"   --->   Operation 248 'sext' 'sext_ln252_1' <Predicate = true> <Delay = 0.00>
ST_102 : Operation 249 [1/1] (0.00ns) (grouped into LUT with out node index_V_4)   --->   "%sext_ln252_1cast = trunc i32 %sext_ln252_1"   --->   Operation 249 'trunc' 'sext_ln252_1cast' <Predicate = true> <Delay = 0.00>
ST_102 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node index_V_4)   --->   "%shl_ln276 = shl i8 %index_V, i8 %sext_ln252_1cast"   --->   Operation 250 'shl' 'shl_ln276' <Predicate = true> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 251 [1/1] (0.00ns) (grouped into LUT with out node index_V_4)   --->   "%or_ln255 = or i1 %or_ln253, i1 %icmp_ln255"   --->   Operation 251 'or' 'or_ln255' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node index_V_4)   --->   "%xor_ln255 = xor i1 %or_ln255, i1 1"   --->   Operation 252 'xor' 'xor_ln255' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node index_V_4)   --->   "%and_ln274 = and i1 %icmp_ln274, i1 %xor_ln255"   --->   Operation 253 'and' 'and_ln274' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 254 [1/1] (0.70ns) (out node of the LUT)   --->   "%index_V_4 = select i1 %and_ln274, i8 %shl_ln276, i8 %index_V_3"   --->   Operation 254 'select' 'index_V_4' <Predicate = true> <Delay = 0.70> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_102 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node index_V_5)   --->   "%xor_ln249 = xor i1 %icmp_ln249, i1 1"   --->   Operation 255 'xor' 'xor_ln249' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node index_V_5)   --->   "%and_ln253 = and i1 %icmp_ln253, i1 %xor_ln249"   --->   Operation 256 'and' 'and_ln253' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_102 : Operation 257 [1/1] (0.30ns) (out node of the LUT)   --->   "%index_V_5 = select i1 %and_ln253, i8 %index_V, i8 %index_V_4"   --->   Operation 257 'select' 'index_V_5' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 103 <SV = 102> <Delay = 1.00>
ST_103 : Operation 258 [1/1] (0.70ns)   --->   "%index_V_6 = sub i8 0, i8 %index_V_5"   --->   Operation 258 'sub' 'index_V_6' <Predicate = (p_Result_s)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_103 : Operation 259 [1/1] (0.30ns)   --->   "%index_V_7 = select i1 %p_Result_s, i8 %index_V_6, i8 %index_V_5"   --->   Operation 259 'select' 'index_V_7' <Predicate = true> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 104 <SV = 103> <Delay = 1.19>
ST_104 : Operation 260 [1/1] (0.00ns)   --->   "%zext_ln541 = zext i8 %index_V_7"   --->   Operation 260 'zext' 'zext_ln541' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 261 [1/1] (0.00ns)   --->   "%lut_addr = getelementptr i32 %lut, i64 0, i64 %zext_ln541" [activation.cpp:89]   --->   Operation 261 'getelementptr' 'lut_addr' <Predicate = true> <Delay = 0.00>
ST_104 : Operation 262 [2/2] (1.19ns)   --->   "%lut_load = load i8 %lut_addr" [activation.cpp:89]   --->   Operation 262 'load' 'lut_load' <Predicate = true> <Delay = 1.19> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 256> <ROM>

State 105 <SV = 104> <Delay = 1.19>
ST_105 : Operation 263 [1/1] (0.00ns)   --->   "%specpipeline_ln97 = specpipeline void @_ssdm_op_SpecPipeline, i32 1, i32 0, i32 0, i32 0, void @empty_0" [activation.cpp:97]   --->   Operation 263 'specpipeline' 'specpipeline_ln97' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 264 [1/1] (0.00ns)   --->   "%spectopmodule_ln93 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_1" [activation.cpp:93]   --->   Operation 264 'spectopmodule' 'spectopmodule_ln93' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 265 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_r"   --->   Operation 265 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 266 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 266 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 267 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %output_r"   --->   Operation 267 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 268 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %output_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0, i32 4294967295, i32 0"   --->   Operation 268 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 269 [1/2] (1.19ns)   --->   "%lut_load = load i8 %lut_addr" [activation.cpp:89]   --->   Operation 269 'load' 'lut_load' <Predicate = true> <Delay = 1.19> <CoreInst = "ROM">   --->   Core 101 'ROM' <Latency = 1> <II = 1> <Delay = 1.19> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 256> <ROM>
ST_105 : Operation 270 [1/1] (0.00ns)   --->   "%bitcast_ln99 = bitcast i32 %lut_load" [activation.cpp:99]   --->   Operation 270 'bitcast' 'bitcast_ln99' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 271 [1/1] (0.00ns)   --->   "%write_ln99 = write void @_ssdm_op_Write.ap_none.i32P0A, i32 %output_r, i32 %bitcast_ln99" [activation.cpp:99]   --->   Operation 271 'write' 'write_ln99' <Predicate = true> <Delay = 0.00>
ST_105 : Operation 272 [1/1] (0.00ns)   --->   "%ret_ln100 = ret" [activation.cpp:100]   --->   Operation 272 'ret' 'ret_ln100' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 2ns, clock uncertainty: 0.54ns.

 <State 1>: 1.37ns
The critical path consists of the following:
	wire read operation ('input', activation.cpp:93) on port 'input_r' (activation.cpp:93) [10]  (0 ns)
	'fcmp' operation ('tmp_4', activation.cpp:78) [17]  (1.37 ns)

 <State 2>: 1.37ns
The critical path consists of the following:
	'fcmp' operation ('tmp_4', activation.cpp:78) [17]  (1.37 ns)

 <State 3>: 1.37ns
The critical path consists of the following:
	'fcmp' operation ('tmp_4', activation.cpp:78) [17]  (1.37 ns)

 <State 4>: 0.983ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln78_1', activation.cpp:78) [15]  (0.756 ns)
	'or' operation ('or_ln78', activation.cpp:78) [16]  (0 ns)
	'and' operation ('and_ln78', activation.cpp:78) [18]  (0 ns)
	'select' operation ('value', activation.cpp:78) [19]  (0.227 ns)

 <State 5>: 1.37ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', activation.cpp:79) [26]  (1.37 ns)

 <State 6>: 1.37ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', activation.cpp:79) [26]  (1.37 ns)

 <State 7>: 1.37ns
The critical path consists of the following:
	'fcmp' operation ('tmp_6', activation.cpp:79) [26]  (1.37 ns)

 <State 8>: 0.411ns
The critical path consists of the following:
	'or' operation ('or_ln79', activation.cpp:79) [25]  (0 ns)
	'and' operation ('and_ln79', activation.cpp:79) [27]  (0 ns)
	'select' operation ('select_ln82', activation.cpp:82) [29]  (0.411 ns)

 <State 9>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 10>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 11>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 12>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 13>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 14>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 15>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 16>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 17>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 18>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 19>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 20>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 21>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 22>: 1.53ns
The critical path consists of the following:
	'dadd' operation ('add_i_i', activation.cpp:82) [30]  (1.53 ns)

 <State 23>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 24>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 25>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 26>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 27>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 28>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 29>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 30>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 31>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 32>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 33>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 34>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 35>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 36>: 1.53ns
The critical path consists of the following:
	'dmul' operation ('mul_i_i', activation.cpp:82) [31]  (1.53 ns)

 <State 37>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 38>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 39>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 40>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 41>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 42>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 43>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 44>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 45>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 46>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 47>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 48>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 49>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 50>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 51>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 52>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 53>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 54>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 55>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 56>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 57>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 58>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 59>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 60>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 61>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 62>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 63>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 64>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 65>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 66>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 67>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 68>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 69>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 70>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 71>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 72>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 73>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 74>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 75>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 76>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 77>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 78>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 79>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 80>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 81>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 82>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 83>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 84>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 85>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 86>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 87>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 88>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 89>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 90>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 91>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 92>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 93>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 94>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 95>: 1.84ns
The critical path consists of the following:
	'ddiv' operation ('div_i_i', activation.cpp:82) [32]  (1.84 ns)

 <State 96>: 1.27ns
The critical path consists of the following:
	'fptrunc' operation ('normalized_value', activation.cpp:82) [33]  (1.27 ns)

 <State 97>: 1.27ns
The critical path consists of the following:
	'fptrunc' operation ('normalized_value', activation.cpp:82) [33]  (1.27 ns)

 <State 98>: 1.27ns
The critical path consists of the following:
	'fptrunc' operation ('normalized_value', activation.cpp:82) [33]  (1.27 ns)

 <State 99>: 1.27ns
The critical path consists of the following:
	'fptrunc' operation ('normalized_value', activation.cpp:82) [33]  (1.27 ns)

 <State 100>: 1.31ns
The critical path consists of the following:
	'sub' operation ('sh_amt') [43]  (0.715 ns)
	'icmp' operation ('icmp_ln255') [46]  (0.593 ns)

 <State 101>: 1.33ns
The critical path consists of the following:
	'sub' operation ('sh_amt') [48]  (0.715 ns)
	'icmp' operation ('icmp_ln274') [51]  (0.619 ns)

 <State 102>: 1.01ns
The critical path consists of the following:
	'shl' operation ('index.V') [56]  (0 ns)
	'select' operation ('index.V') [65]  (0.706 ns)
	'select' operation ('index.V') [68]  (0.303 ns)

 <State 103>: 1.01ns
The critical path consists of the following:
	'sub' operation ('index.V') [69]  (0.705 ns)
	'select' operation ('index.V') [70]  (0.303 ns)

 <State 104>: 1.2ns
The critical path consists of the following:
	'getelementptr' operation ('lut_addr', activation.cpp:89) [72]  (0 ns)
	'load' operation ('lut_load', activation.cpp:89) on array 'lut' [73]  (1.2 ns)

 <State 105>: 1.2ns
The critical path consists of the following:
	'load' operation ('lut_load', activation.cpp:89) on array 'lut' [73]  (1.2 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83
	State 84
	State 85
	State 86
	State 87
	State 88
	State 89
	State 90
	State 91
	State 92
	State 93
	State 94
	State 95
	State 96
	State 97
	State 98
	State 99
	State 100
	State 101
	State 102
	State 103
	State 104
	State 105


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
