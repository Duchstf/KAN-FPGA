// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="activation_activation,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu13p-flga2577-2-e,HLS_INPUT_CLOCK=2.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.425000,HLS_SYN_LAT=18,HLS_SYN_TPT=1,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=1243,HLS_SYN_LUT=1804,HLS_VERSION=2022_2}" *)

module activation (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r,
        output_r
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] input_r;
output  [15:0] output_r;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_pp0_stage0_subdone;
wire   [7:0] lut_V_address0;
reg    lut_V_ce0;
wire   [11:0] lut_V_q0;
reg   [15:0] input_r_read_reg_814;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1650_fu_179_p2;
reg   [0:0] icmp_ln1650_reg_819;
wire   [0:0] icmp_ln1649_fu_195_p2;
reg   [0:0] icmp_ln1649_reg_824;
wire   [14:0] add_ln1347_fu_201_p2;
reg   [14:0] add_ln1347_reg_829;
wire   [19:0] r_V_1_fu_229_p2;
reg   [19:0] r_V_1_reg_834;
reg   [5:0] ret_V_reg_839;
reg   [9:0] tmp_reg_846;
wire   [5:0] ret_V_5_fu_279_p3;
reg   [5:0] ret_V_5_reg_851;
reg   [11:0] p_Val2_s_reg_861;
reg   [0:0] p_Result_10_reg_868;
reg   [0:0] p_Result_10_reg_868_pp0_iter6_reg;
reg   [0:0] p_Result_10_reg_868_pp0_iter7_reg;
reg   [0:0] p_Result_10_reg_868_pp0_iter8_reg;
reg   [0:0] p_Result_10_reg_868_pp0_iter9_reg;
reg   [0:0] p_Result_10_reg_868_pp0_iter10_reg;
wire   [0:0] icmp_ln1090_fu_302_p2;
reg   [0:0] icmp_ln1090_reg_874;
reg   [0:0] icmp_ln1090_reg_874_pp0_iter7_reg;
reg   [0:0] icmp_ln1090_reg_874_pp0_iter8_reg;
reg   [0:0] icmp_ln1090_reg_874_pp0_iter9_reg;
reg   [0:0] icmp_ln1090_reg_874_pp0_iter10_reg;
wire   [11:0] tmp_V_2_fu_312_p3;
reg   [11:0] tmp_V_2_reg_879;
wire  signed [15:0] sext_ln1092_fu_318_p1;
reg  signed [15:0] sext_ln1092_reg_884;
reg  signed [15:0] sext_ln1092_reg_884_pp0_iter8_reg;
reg  signed [15:0] sext_ln1092_reg_884_pp0_iter9_reg;
wire   [31:0] sub_ln1099_fu_351_p2;
reg   [31:0] sub_ln1099_reg_891;
reg   [31:0] sub_ln1099_reg_891_pp0_iter8_reg;
wire   [15:0] trunc_ln1099_fu_357_p1;
reg   [15:0] trunc_ln1099_reg_898;
reg   [15:0] trunc_ln1099_reg_898_pp0_iter8_reg;
wire   [3:0] trunc_ln1102_fu_361_p1;
reg   [3:0] trunc_ln1102_reg_903;
wire   [7:0] trunc_ln1098_fu_365_p1;
reg   [7:0] trunc_ln1098_reg_908;
reg   [7:0] trunc_ln1098_reg_908_pp0_iter8_reg;
reg   [7:0] trunc_ln1098_reg_908_pp0_iter9_reg;
reg   [7:0] trunc_ln1098_reg_908_pp0_iter10_reg;
wire   [31:0] lsb_index_fu_369_p2;
reg   [31:0] lsb_index_reg_913;
reg   [30:0] tmp_4_reg_919;
wire   [0:0] icmp_ln1102_fu_404_p2;
reg   [0:0] icmp_ln1102_reg_924;
wire   [1:0] or_ln_fu_457_p3;
reg   [1:0] or_ln_reg_929;
wire   [0:0] icmp_ln1113_fu_465_p2;
reg   [0:0] icmp_ln1113_reg_934;
wire   [31:0] add_ln1113_fu_470_p2;
reg   [31:0] add_ln1113_reg_939;
wire   [31:0] sub_ln1114_fu_475_p2;
reg   [31:0] sub_ln1114_reg_944;
reg   [62:0] m_4_reg_949;
reg   [0:0] p_Result_6_reg_954;
wire   [31:0] select_ln1090_fu_583_p3;
reg   [31:0] select_ln1090_reg_959;
reg   [31:0] select_ln1090_reg_959_pp0_iter12_reg;
reg   [31:0] select_ln1090_reg_959_pp0_iter13_reg;
reg   [31:0] select_ln1090_reg_959_pp0_iter14_reg;
reg   [31:0] select_ln1090_reg_959_pp0_iter15_reg;
reg   [31:0] select_ln1090_reg_959_pp0_iter16_reg;
reg   [31:0] select_ln1090_reg_959_pp0_iter17_reg;
wire   [62:0] trunc_ln544_fu_594_p1;
reg   [62:0] trunc_ln544_reg_965;
reg   [0:0] p_Result_13_reg_970;
reg   [0:0] p_Result_13_reg_970_pp0_iter15_reg;
reg   [10:0] exp_tmp_reg_975;
wire   [51:0] trunc_ln554_fu_616_p1;
reg   [51:0] trunc_ln554_reg_980;
reg   [51:0] trunc_ln554_reg_980_pp0_iter15_reg;
wire   [0:0] icmp_ln560_fu_623_p2;
reg   [0:0] icmp_ln560_reg_985;
reg   [0:0] icmp_ln560_reg_985_pp0_iter16_reg;
reg   [0:0] icmp_ln560_reg_985_pp0_iter17_reg;
wire   [11:0] F2_fu_628_p2;
reg   [11:0] F2_reg_992;
wire   [53:0] man_V_2_fu_651_p3;
reg   [53:0] man_V_2_reg_1000;
reg   [53:0] man_V_2_reg_1000_pp0_iter17_reg;
wire   [0:0] icmp_ln570_fu_658_p2;
reg   [0:0] icmp_ln570_reg_1005;
wire  signed [11:0] sh_amt_fu_673_p3;
reg  signed [11:0] sh_amt_reg_1010;
wire   [0:0] icmp_ln571_fu_681_p2;
reg   [0:0] icmp_ln571_reg_1016;
wire   [15:0] trunc_ln572_fu_686_p1;
reg   [15:0] trunc_ln572_reg_1022;
reg   [7:0] tmp_9_reg_1028;
wire  signed [31:0] sext_ln570_fu_700_p1;
reg  signed [31:0] sext_ln570_reg_1033;
wire   [0:0] icmp_ln574_fu_703_p2;
reg   [0:0] icmp_ln574_reg_1038;
wire   [15:0] select_ln571_fu_740_p3;
reg   [15:0] select_ln571_reg_1043;
wire   [0:0] and_ln570_fu_757_p2;
reg   [0:0] and_ln570_reg_1048;
wire   [63:0] zext_ln541_fu_289_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage0_01001;
wire   [15:0] select_ln83_fu_185_p3;
wire   [14:0] trunc_ln1649_fu_191_p1;
wire   [14:0] ret_V_4_fu_207_p3;
wire   [11:0] trunc_ln1273_fu_217_p1;
wire   [19:0] shl_ln_fu_221_p3;
wire   [19:0] zext_ln1270_fu_213_p1;
wire   [0:0] icmp_ln1003_fu_262_p2;
wire   [5:0] ret_V_2_fu_267_p2;
wire   [0:0] p_Result_s_fu_255_p3;
wire   [5:0] select_ln1002_fu_272_p3;
wire  signed [7:0] sext_ln541_fu_286_p1;
wire   [11:0] tmp_V_fu_307_p2;
reg   [15:0] p_Result_2_fu_321_p4;
wire   [16:0] p_Result_11_fu_331_p3;
wire  signed [31:0] sext_ln1198_fu_339_p1;
reg   [31:0] l_fu_343_p3;
wire   [3:0] sub_ln1102_fu_384_p2;
wire   [15:0] zext_ln1102_fu_389_p1;
wire   [15:0] lshr_ln1102_fu_393_p2;
wire   [15:0] p_Result_4_fu_399_p2;
wire   [0:0] icmp_ln1101_fu_410_p2;
wire   [0:0] tmp_5_fu_420_p3;
wire   [15:0] add_ln1104_fu_433_p2;
wire   [0:0] p_Result_5_fu_438_p3;
wire   [0:0] xor_ln1104_fu_427_p2;
wire   [0:0] and_ln1104_fu_445_p2;
wire   [0:0] a_fu_415_p2;
wire   [0:0] or_ln1104_fu_451_p2;
wire   [63:0] zext_ln1112_fu_480_p1;
wire   [63:0] zext_ln1113_fu_483_p1;
wire   [63:0] zext_ln1114_fu_492_p1;
wire   [63:0] lshr_ln1113_fu_486_p2;
wire   [63:0] shl_ln1114_fu_495_p2;
wire   [63:0] m_2_fu_501_p3;
wire   [63:0] zext_ln1116_fu_508_p1;
wire   [63:0] m_3_fu_511_p2;
wire   [7:0] sub_ln1119_fu_545_p2;
wire   [7:0] select_ln1098_fu_538_p3;
wire   [7:0] add_ln1124_fu_550_p2;
wire   [63:0] zext_ln1117_fu_535_p1;
wire   [8:0] tmp_2_fu_556_p3;
wire   [63:0] p_Result_12_fu_563_p5;
wire   [31:0] LD_fu_575_p1;
wire   [31:0] bitcast_ln766_fu_579_p1;
wire   [63:0] grp_fu_176_p1;
wire   [63:0] ireg_fu_590_p1;
wire   [11:0] zext_ln455_fu_620_p1;
wire   [52:0] p_Result_14_fu_634_p3;
wire   [53:0] zext_ln558_fu_641_p1;
wire   [53:0] man_V_1_fu_645_p2;
wire   [11:0] add_ln570_fu_663_p2;
wire   [11:0] sub_ln570_fu_668_p2;
wire   [15:0] sext_ln570cast_fu_713_p1;
wire   [0:0] icmp_ln592_fu_708_p2;
wire   [15:0] shl_ln593_fu_717_p2;
wire   [0:0] xor_ln560_fu_730_p2;
wire   [0:0] and_ln571_fu_735_p2;
wire   [15:0] select_ln592_fu_722_p3;
wire   [0:0] or_ln571_fu_747_p2;
wire   [0:0] xor_ln571_fu_751_p2;
wire   [53:0] zext_ln575_fu_762_p1;
wire   [53:0] ashr_ln575_fu_765_p2;
wire   [31:0] bitcast_ln724_fu_774_p1;
wire   [0:0] tmp_8_fu_777_p3;
wire   [15:0] trunc_ln575_fu_770_p1;
wire   [15:0] select_ln577_fu_785_p3;
wire   [15:0] select_ln574_fu_793_p3;
wire   [15:0] select_ln570_fu_800_p3;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to17;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
end

activation_lut_V_ROM_AUTO_1R #(
    .DataWidth( 12 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
lut_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lut_V_address0),
    .ce0(lut_V_ce0),
    .q0(lut_V_q0)
);

activation_fpext_32ns_64_3_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_3_no_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln1090_reg_959),
    .ce(1'b1),
    .dout(grp_fu_176_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        F2_reg_992 <= F2_fu_628_p2;
        exp_tmp_reg_975 <= {{ireg_fu_590_p1[62:52]}};
        icmp_ln1090_reg_874 <= icmp_ln1090_fu_302_p2;
        icmp_ln1090_reg_874_pp0_iter10_reg <= icmp_ln1090_reg_874_pp0_iter9_reg;
        icmp_ln1090_reg_874_pp0_iter7_reg <= icmp_ln1090_reg_874;
        icmp_ln1090_reg_874_pp0_iter8_reg <= icmp_ln1090_reg_874_pp0_iter7_reg;
        icmp_ln1090_reg_874_pp0_iter9_reg <= icmp_ln1090_reg_874_pp0_iter8_reg;
        icmp_ln560_reg_985 <= icmp_ln560_fu_623_p2;
        icmp_ln560_reg_985_pp0_iter16_reg <= icmp_ln560_reg_985;
        icmp_ln560_reg_985_pp0_iter17_reg <= icmp_ln560_reg_985_pp0_iter16_reg;
        man_V_2_reg_1000_pp0_iter17_reg <= man_V_2_reg_1000;
        p_Result_10_reg_868 <= lut_V_q0[32'd11];
        p_Result_10_reg_868_pp0_iter10_reg <= p_Result_10_reg_868_pp0_iter9_reg;
        p_Result_10_reg_868_pp0_iter6_reg <= p_Result_10_reg_868;
        p_Result_10_reg_868_pp0_iter7_reg <= p_Result_10_reg_868_pp0_iter6_reg;
        p_Result_10_reg_868_pp0_iter8_reg <= p_Result_10_reg_868_pp0_iter7_reg;
        p_Result_10_reg_868_pp0_iter9_reg <= p_Result_10_reg_868_pp0_iter8_reg;
        p_Result_13_reg_970 <= ireg_fu_590_p1[32'd63];
        p_Result_13_reg_970_pp0_iter15_reg <= p_Result_13_reg_970;
        p_Val2_s_reg_861 <= lut_V_q0;
        r_V_1_reg_834 <= r_V_1_fu_229_p2;
        ret_V_5_reg_851 <= ret_V_5_fu_279_p3;
        ret_V_reg_839 <= {{r_V_1_fu_229_p2[19:14]}};
        select_ln1090_reg_959 <= select_ln1090_fu_583_p3;
        select_ln1090_reg_959_pp0_iter12_reg <= select_ln1090_reg_959;
        select_ln1090_reg_959_pp0_iter13_reg <= select_ln1090_reg_959_pp0_iter12_reg;
        select_ln1090_reg_959_pp0_iter14_reg <= select_ln1090_reg_959_pp0_iter13_reg;
        select_ln1090_reg_959_pp0_iter15_reg <= select_ln1090_reg_959_pp0_iter14_reg;
        select_ln1090_reg_959_pp0_iter16_reg <= select_ln1090_reg_959_pp0_iter15_reg;
        select_ln1090_reg_959_pp0_iter17_reg <= select_ln1090_reg_959_pp0_iter16_reg;
        sext_ln1092_reg_884_pp0_iter8_reg <= sext_ln1092_reg_884;
        sext_ln1092_reg_884_pp0_iter9_reg <= sext_ln1092_reg_884_pp0_iter8_reg;
        sub_ln1099_reg_891_pp0_iter8_reg <= sub_ln1099_reg_891;
        tmp_V_2_reg_879 <= tmp_V_2_fu_312_p3;
        tmp_reg_846 <= {{r_V_1_fu_229_p2[13:4]}};
        trunc_ln1098_reg_908_pp0_iter10_reg <= trunc_ln1098_reg_908_pp0_iter9_reg;
        trunc_ln1098_reg_908_pp0_iter8_reg <= trunc_ln1098_reg_908;
        trunc_ln1098_reg_908_pp0_iter9_reg <= trunc_ln1098_reg_908_pp0_iter8_reg;
        trunc_ln1099_reg_898_pp0_iter8_reg <= trunc_ln1099_reg_898;
        trunc_ln544_reg_965 <= trunc_ln544_fu_594_p1;
        trunc_ln554_reg_980 <= trunc_ln554_fu_616_p1;
        trunc_ln554_reg_980_pp0_iter15_reg <= trunc_ln554_reg_980;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1090_reg_874_pp0_iter8_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1113_reg_939 <= add_ln1113_fu_470_p2;
        icmp_ln1113_reg_934 <= icmp_ln1113_fu_465_p2;
        or_ln_reg_929[0] <= or_ln_fu_457_p3[0];
        sub_ln1114_reg_944 <= sub_ln1114_fu_475_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1347_reg_829 <= add_ln1347_fu_201_p2;
        icmp_ln1649_reg_824 <= icmp_ln1649_fu_195_p2;
        icmp_ln1650_reg_819 <= icmp_ln1650_fu_179_p2;
        input_r_read_reg_814 <= input_r;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln560_reg_985_pp0_iter16_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln570_reg_1048 <= and_ln570_fu_757_p2;
        icmp_ln574_reg_1038 <= icmp_ln574_fu_703_p2;
        select_ln571_reg_1043 <= select_ln571_fu_740_p3;
        sext_ln570_reg_1033 <= sext_ln570_fu_700_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1090_reg_874_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln1102_reg_924 <= icmp_ln1102_fu_404_p2;
        lsb_index_reg_913 <= lsb_index_fu_369_p2;
        tmp_4_reg_919 <= {{lsb_index_fu_369_p2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln560_reg_985 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln570_reg_1005 <= icmp_ln570_fu_658_p2;
        icmp_ln571_reg_1016 <= icmp_ln571_fu_681_p2;
        man_V_2_reg_1000 <= man_V_2_fu_651_p3;
        sh_amt_reg_1010 <= sh_amt_fu_673_p3;
        tmp_9_reg_1028 <= {{sh_amt_fu_673_p3[11:4]}};
        trunc_ln572_reg_1022 <= trunc_ln572_fu_686_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1090_reg_874_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_4_reg_949 <= {{m_3_fu_511_p2[63:1]}};
        p_Result_6_reg_954 <= m_3_fu_511_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1090_reg_874 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sext_ln1092_reg_884 <= sext_ln1092_fu_318_p1;
        sub_ln1099_reg_891 <= sub_ln1099_fu_351_p2;
        trunc_ln1098_reg_908 <= trunc_ln1098_fu_365_p1;
        trunc_ln1099_reg_898 <= trunc_ln1099_fu_357_p1;
        trunc_ln1102_reg_903 <= trunc_ln1102_fu_361_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to17 = 1'b1;
    end else begin
        ap_idle_pp0_0to17 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to17 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lut_V_ce0 = 1'b1;
    end else begin
        lut_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_628_p2 = (12'd1075 - zext_ln455_fu_620_p1);

assign LD_fu_575_p1 = p_Result_12_fu_563_p5[31:0];

assign a_fu_415_p2 = (icmp_ln1102_reg_924 & icmp_ln1101_fu_410_p2);

assign add_ln1104_fu_433_p2 = ($signed(trunc_ln1099_reg_898_pp0_iter8_reg) + $signed(16'd65512));

assign add_ln1113_fu_470_p2 = ($signed(sub_ln1099_reg_891_pp0_iter8_reg) + $signed(32'd4294967271));

assign add_ln1124_fu_550_p2 = (sub_ln1119_fu_545_p2 + select_ln1098_fu_538_p3);

assign add_ln1347_fu_201_p2 = (trunc_ln1649_fu_191_p1 + 15'd8192);

assign add_ln570_fu_663_p2 = ($signed(F2_reg_992) + $signed(12'd4086));

assign and_ln1104_fu_445_p2 = (xor_ln1104_fu_427_p2 & p_Result_5_fu_438_p3);

assign and_ln570_fu_757_p2 = (xor_ln571_fu_751_p2 & icmp_ln570_reg_1005);

assign and_ln571_fu_735_p2 = (xor_ln560_fu_730_p2 & icmp_ln571_reg_1016);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ashr_ln575_fu_765_p2 = $signed(man_V_2_reg_1000_pp0_iter17_reg) >>> zext_ln575_fu_762_p1;

assign bitcast_ln724_fu_774_p1 = select_ln1090_reg_959_pp0_iter17_reg;

assign bitcast_ln766_fu_579_p1 = LD_fu_575_p1;

assign icmp_ln1003_fu_262_p2 = ((tmp_reg_846 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln1090_fu_302_p2 = ((p_Val2_s_reg_861 == 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln1101_fu_410_p2 = (($signed(tmp_4_reg_919) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1102_fu_404_p2 = ((p_Result_4_fu_399_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln1113_fu_465_p2 = (($signed(lsb_index_reg_913) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1649_fu_195_p2 = (($signed(select_ln83_fu_185_p3) > $signed(16'd8192)) ? 1'b1 : 1'b0);

assign icmp_ln1650_fu_179_p2 = (($signed(input_r) < $signed(16'd57344)) ? 1'b1 : 1'b0);

assign icmp_ln560_fu_623_p2 = ((trunc_ln544_reg_965 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln570_fu_658_p2 = (($signed(F2_reg_992) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_681_p2 = ((F2_reg_992 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln574_fu_703_p2 = ((sh_amt_reg_1010 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln592_fu_708_p2 = ((tmp_9_reg_1028 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_fu_590_p1 = grp_fu_176_p1;


always @ (sext_ln1198_fu_339_p1) begin
    if (sext_ln1198_fu_339_p1[0] == 1'b1) begin
        l_fu_343_p3 = 32'd0;
    end else if (sext_ln1198_fu_339_p1[1] == 1'b1) begin
        l_fu_343_p3 = 32'd1;
    end else if (sext_ln1198_fu_339_p1[2] == 1'b1) begin
        l_fu_343_p3 = 32'd2;
    end else if (sext_ln1198_fu_339_p1[3] == 1'b1) begin
        l_fu_343_p3 = 32'd3;
    end else if (sext_ln1198_fu_339_p1[4] == 1'b1) begin
        l_fu_343_p3 = 32'd4;
    end else if (sext_ln1198_fu_339_p1[5] == 1'b1) begin
        l_fu_343_p3 = 32'd5;
    end else if (sext_ln1198_fu_339_p1[6] == 1'b1) begin
        l_fu_343_p3 = 32'd6;
    end else if (sext_ln1198_fu_339_p1[7] == 1'b1) begin
        l_fu_343_p3 = 32'd7;
    end else if (sext_ln1198_fu_339_p1[8] == 1'b1) begin
        l_fu_343_p3 = 32'd8;
    end else if (sext_ln1198_fu_339_p1[9] == 1'b1) begin
        l_fu_343_p3 = 32'd9;
    end else if (sext_ln1198_fu_339_p1[10] == 1'b1) begin
        l_fu_343_p3 = 32'd10;
    end else if (sext_ln1198_fu_339_p1[11] == 1'b1) begin
        l_fu_343_p3 = 32'd11;
    end else if (sext_ln1198_fu_339_p1[12] == 1'b1) begin
        l_fu_343_p3 = 32'd12;
    end else if (sext_ln1198_fu_339_p1[13] == 1'b1) begin
        l_fu_343_p3 = 32'd13;
    end else if (sext_ln1198_fu_339_p1[14] == 1'b1) begin
        l_fu_343_p3 = 32'd14;
    end else if (sext_ln1198_fu_339_p1[15] == 1'b1) begin
        l_fu_343_p3 = 32'd15;
    end else if (sext_ln1198_fu_339_p1[16] == 1'b1) begin
        l_fu_343_p3 = 32'd16;
    end else if (sext_ln1198_fu_339_p1[17] == 1'b1) begin
        l_fu_343_p3 = 32'd17;
    end else if (sext_ln1198_fu_339_p1[18] == 1'b1) begin
        l_fu_343_p3 = 32'd18;
    end else if (sext_ln1198_fu_339_p1[19] == 1'b1) begin
        l_fu_343_p3 = 32'd19;
    end else if (sext_ln1198_fu_339_p1[20] == 1'b1) begin
        l_fu_343_p3 = 32'd20;
    end else if (sext_ln1198_fu_339_p1[21] == 1'b1) begin
        l_fu_343_p3 = 32'd21;
    end else if (sext_ln1198_fu_339_p1[22] == 1'b1) begin
        l_fu_343_p3 = 32'd22;
    end else if (sext_ln1198_fu_339_p1[23] == 1'b1) begin
        l_fu_343_p3 = 32'd23;
    end else if (sext_ln1198_fu_339_p1[24] == 1'b1) begin
        l_fu_343_p3 = 32'd24;
    end else if (sext_ln1198_fu_339_p1[25] == 1'b1) begin
        l_fu_343_p3 = 32'd25;
    end else if (sext_ln1198_fu_339_p1[26] == 1'b1) begin
        l_fu_343_p3 = 32'd26;
    end else if (sext_ln1198_fu_339_p1[27] == 1'b1) begin
        l_fu_343_p3 = 32'd27;
    end else if (sext_ln1198_fu_339_p1[28] == 1'b1) begin
        l_fu_343_p3 = 32'd28;
    end else if (sext_ln1198_fu_339_p1[29] == 1'b1) begin
        l_fu_343_p3 = 32'd29;
    end else if (sext_ln1198_fu_339_p1[30] == 1'b1) begin
        l_fu_343_p3 = 32'd30;
    end else if (sext_ln1198_fu_339_p1[31] == 1'b1) begin
        l_fu_343_p3 = 32'd31;
    end else begin
        l_fu_343_p3 = 32'd32;
    end
end

assign lsb_index_fu_369_p2 = ($signed(sub_ln1099_reg_891) + $signed(32'd4294967272));

assign lshr_ln1102_fu_393_p2 = 16'd65535 >> zext_ln1102_fu_389_p1;

assign lshr_ln1113_fu_486_p2 = zext_ln1112_fu_480_p1 >> zext_ln1113_fu_483_p1;

assign lut_V_address0 = zext_ln541_fu_289_p1;

assign m_2_fu_501_p3 = ((icmp_ln1113_reg_934[0:0] == 1'b1) ? lshr_ln1113_fu_486_p2 : shl_ln1114_fu_495_p2);

assign m_3_fu_511_p2 = (m_2_fu_501_p3 + zext_ln1116_fu_508_p1);

assign man_V_1_fu_645_p2 = (54'd0 - zext_ln558_fu_641_p1);

assign man_V_2_fu_651_p3 = ((p_Result_13_reg_970_pp0_iter15_reg[0:0] == 1'b1) ? man_V_1_fu_645_p2 : zext_ln558_fu_641_p1);

assign or_ln1104_fu_451_p2 = (and_ln1104_fu_445_p2 | a_fu_415_p2);

assign or_ln571_fu_747_p2 = (icmp_ln571_reg_1016 | icmp_ln560_reg_985_pp0_iter16_reg);

assign or_ln_fu_457_p3 = {{1'd0}, {or_ln1104_fu_451_p2}};

assign output_r = ((icmp_ln560_reg_985_pp0_iter17_reg[0:0] == 1'b1) ? 16'd0 : select_ln570_fu_800_p3);

assign p_Result_11_fu_331_p3 = {{1'd1}, {p_Result_2_fu_321_p4}};

assign p_Result_12_fu_563_p5 = {{zext_ln1117_fu_535_p1[63:32]}, {tmp_2_fu_556_p3}, {zext_ln1117_fu_535_p1[22:0]}};

assign p_Result_14_fu_634_p3 = {{1'd1}, {trunc_ln554_reg_980_pp0_iter15_reg}};

integer ap_tvar_int_0;

always @ (sext_ln1092_fu_318_p1) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_2_fu_321_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_2_fu_321_p4[ap_tvar_int_0] = sext_ln1092_fu_318_p1[15 - ap_tvar_int_0];
        end
    end
end

assign p_Result_4_fu_399_p2 = (sext_ln1092_reg_884 & lshr_ln1102_fu_393_p2);

assign p_Result_5_fu_438_p3 = sext_ln1092_reg_884_pp0_iter8_reg[add_ln1104_fu_433_p2];

assign p_Result_s_fu_255_p3 = r_V_1_reg_834[32'd19];

assign r_V_1_fu_229_p2 = (shl_ln_fu_221_p3 - zext_ln1270_fu_213_p1);

assign ret_V_2_fu_267_p2 = (ret_V_reg_839 + 6'd1);

assign ret_V_4_fu_207_p3 = ((icmp_ln1649_reg_824[0:0] == 1'b1) ? 15'd16384 : add_ln1347_reg_829);

assign ret_V_5_fu_279_p3 = ((p_Result_s_fu_255_p3[0:0] == 1'b1) ? select_ln1002_fu_272_p3 : ret_V_reg_839);

assign select_ln1002_fu_272_p3 = ((icmp_ln1003_fu_262_p2[0:0] == 1'b1) ? ret_V_reg_839 : ret_V_2_fu_267_p2);

assign select_ln1090_fu_583_p3 = ((icmp_ln1090_reg_874_pp0_iter10_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_fu_579_p1);

assign select_ln1098_fu_538_p3 = ((p_Result_6_reg_954[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln570_fu_800_p3 = ((and_ln570_reg_1048[0:0] == 1'b1) ? select_ln574_fu_793_p3 : select_ln571_reg_1043);

assign select_ln571_fu_740_p3 = ((and_ln571_fu_735_p2[0:0] == 1'b1) ? trunc_ln572_reg_1022 : select_ln592_fu_722_p3);

assign select_ln574_fu_793_p3 = ((icmp_ln574_reg_1038[0:0] == 1'b1) ? trunc_ln575_fu_770_p1 : select_ln577_fu_785_p3);

assign select_ln577_fu_785_p3 = ((tmp_8_fu_777_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln592_fu_722_p3 = ((icmp_ln592_fu_708_p2[0:0] == 1'b1) ? shl_ln593_fu_717_p2 : 16'd0);

assign select_ln83_fu_185_p3 = ((icmp_ln1650_reg_819[0:0] == 1'b1) ? 16'd57344 : input_r_read_reg_814);

assign sext_ln1092_fu_318_p1 = $signed(tmp_V_2_reg_879);

assign sext_ln1198_fu_339_p1 = $signed(p_Result_11_fu_331_p3);

assign sext_ln541_fu_286_p1 = $signed(ret_V_5_reg_851);

assign sext_ln570_fu_700_p1 = sh_amt_reg_1010;

assign sext_ln570cast_fu_713_p1 = sext_ln570_fu_700_p1[15:0];

assign sh_amt_fu_673_p3 = ((icmp_ln570_fu_658_p2[0:0] == 1'b1) ? add_ln570_fu_663_p2 : sub_ln570_fu_668_p2);

assign shl_ln1114_fu_495_p2 = zext_ln1112_fu_480_p1 << zext_ln1114_fu_492_p1;

assign shl_ln593_fu_717_p2 = trunc_ln572_reg_1022 << sext_ln570cast_fu_713_p1;

assign shl_ln_fu_221_p3 = {{trunc_ln1273_fu_217_p1}, {8'd0}};

assign sub_ln1099_fu_351_p2 = (32'd16 - l_fu_343_p3);

assign sub_ln1102_fu_384_p2 = ($signed(4'd9) - $signed(trunc_ln1102_reg_903));

assign sub_ln1114_fu_475_p2 = (32'd25 - sub_ln1099_reg_891_pp0_iter8_reg);

assign sub_ln1119_fu_545_p2 = (8'd6 - trunc_ln1098_reg_908_pp0_iter10_reg);

assign sub_ln570_fu_668_p2 = (12'd10 - F2_reg_992);

assign tmp_2_fu_556_p3 = {{p_Result_10_reg_868_pp0_iter10_reg}, {add_ln1124_fu_550_p2}};

assign tmp_5_fu_420_p3 = lsb_index_reg_913[32'd31];

assign tmp_8_fu_777_p3 = bitcast_ln724_fu_774_p1[32'd31];

assign tmp_V_2_fu_312_p3 = ((p_Result_10_reg_868[0:0] == 1'b1) ? tmp_V_fu_307_p2 : p_Val2_s_reg_861);

assign tmp_V_fu_307_p2 = (12'd0 - p_Val2_s_reg_861);

assign trunc_ln1098_fu_365_p1 = l_fu_343_p3[7:0];

assign trunc_ln1099_fu_357_p1 = sub_ln1099_fu_351_p2[15:0];

assign trunc_ln1102_fu_361_p1 = sub_ln1099_fu_351_p2[3:0];

assign trunc_ln1273_fu_217_p1 = ret_V_4_fu_207_p3[11:0];

assign trunc_ln1649_fu_191_p1 = select_ln83_fu_185_p3[14:0];

assign trunc_ln544_fu_594_p1 = ireg_fu_590_p1[62:0];

assign trunc_ln554_fu_616_p1 = ireg_fu_590_p1[51:0];

assign trunc_ln572_fu_686_p1 = man_V_2_fu_651_p3[15:0];

assign trunc_ln575_fu_770_p1 = ashr_ln575_fu_765_p2[15:0];

assign xor_ln1104_fu_427_p2 = (tmp_5_fu_420_p3 ^ 1'd1);

assign xor_ln560_fu_730_p2 = (icmp_ln560_reg_985_pp0_iter16_reg ^ 1'd1);

assign xor_ln571_fu_751_p2 = (or_ln571_fu_747_p2 ^ 1'd1);

assign zext_ln1102_fu_389_p1 = sub_ln1102_fu_384_p2;

assign zext_ln1112_fu_480_p1 = $unsigned(sext_ln1092_reg_884_pp0_iter9_reg);

assign zext_ln1113_fu_483_p1 = add_ln1113_reg_939;

assign zext_ln1114_fu_492_p1 = sub_ln1114_reg_944;

assign zext_ln1116_fu_508_p1 = or_ln_reg_929;

assign zext_ln1117_fu_535_p1 = m_4_reg_949;

assign zext_ln1270_fu_213_p1 = ret_V_4_fu_207_p3;

assign zext_ln455_fu_620_p1 = exp_tmp_reg_975;

assign zext_ln541_fu_289_p1 = $unsigned(sext_ln541_fu_286_p1);

assign zext_ln558_fu_641_p1 = p_Result_14_fu_634_p3;

assign zext_ln575_fu_762_p1 = $unsigned(sext_ln570_reg_1033);

always @ (posedge ap_clk) begin
    or_ln_reg_929[1] <= 1'b0;
end

endmodule //activation
